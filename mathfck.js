function compile(code){const stacks=[];let firstMap,str="",i=0,prevChar="";for(const t of code){if(!/[0-9]|\+|-|\/|\*|\./.test(t))throw new Error(`Invalid syntax: ${t} is not allowed`);if(!firstMap&&!/^[0-9]$/.test(t))throw new Error("Invalid syntax: First syntax should be a number.");if(prevChar===t&&/\+|-|\/|\*|\./.test(prevChar))throw new Error("Invalid syntax: No arithmetic duplication.");prevChar=t,firstMap=!0,/^[0-9]$/.test(t)?str+=t:/\+|-|\/|\*|\./.test(t)&&(stacks.push(str),stacks.push(t),str=""),i===code.length-1&&(stacks.push(str),str=""),i++}let stackStr="";for(const t of stacks)stackStr+="."!==t?t:"|";let stacksCode=stackStr.split("|");const nums=[];for(const t of stacksCode){if(!(t.includes("+")&&t.includes("-")&&t.includes("/")&&t.includes("*")))throw new Error("Invalid syntax: 4 arithmetic operation should exists in the code.");if((t.match(/\+/g)||[]).length>1||(t.match(/\-/g)||[]).length>1||(t.match(/\*/g)||[]).length>1||(t.match(/\//g)||[]).length>1)throw new Error("Invalid syntax: No arithmetic duplication.");const s=t.replace(/\+|-|\/|\*|\./g," ").split(" "),r=s.filter(((t,r)=>s.indexOf(t)!=r));if(0!==r.length)throw new Error("Invalid syntax: No number duplication.")}const chars=stacksCode.map((ch=>String.fromCharCode(eval(ch))));console.log(chars.join(""))}
